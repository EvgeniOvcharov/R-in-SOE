install.packages("checkenc")
help(checkenc)
help("checkenc)
help("checkenc")
install.packages("dplyr")
library(dplyr)
url <-'http://movie.douban.com/top250?format=text'
web <- readLines(url,encoding="UTF-8")
name<-str_extract_all(string = web, pattern = '<span class="title">.+</span>')
View(name)
head(name)
movie.names_line <- unlist(name)
head(movie.names_line)
movie.names <- str_extract(string = movie.names_line, pattern = ">[^&].+<") %>% str_replace_all(string = ., pattern = ">|<",replacement = "")
movie.names<- na.omit(movie.names)
paste("control",1:3,sep = "_")
paste("control","_")
text <- "I love R.\nI'm fascinated by Statisitcs."
cat(text)
help("cat")
strsplit(text,split = " ")
strsplit(text,split = "\\s")
strsplit(text,split = "\s")
strsplit(text,split = \s)
strsplit(text,split = "\\s")
x<- c("I love R","I'm fascinated by Statisitcs","I")
x<- c("I love R","I'm fascinated by Statisitcs","I")
grep(pattern = "love",x = x)
grep(pattern = "love",x = x,value = TRUE
grep(pattern = "love",x = x,value = TRUE)
grepl(pattern = "love",x = x)
str_detect(string = x, pattern = "love")
match(x = "I",table = x)
test_vector3<-c("Without the vowels,We can still read the word.")
sub(pattern = "[aeiou]",replacement = "-",x = test_vector3)
gsub(pattern = "[aeiou]",replacement = "-",x = test_vector3)
str_replace_all(string = test_vector3,pattern = "[aeiou]",replacement = "")
substr("abcdef", start = 2, stop = 4)
substring("abcdef", first = 1:6, last = 1:6)
str_sub("abcdef",start = 2, end = 4)
str_sub("abcdef",start = 1:6, end = 1:6)
text_weibo<- c("#围棋人机大战# 【人工智能攻克围棋 AlphaGo三比零完胜李世石】","谷歌人工智 能AlphaGo与韩国棋手李世石今日进行了第三场较量","最终AlphaGo战胜李世石，连续取得三场胜 利。接下来两场将沦为李世石的“荣誉之战。")
str_match_all(text_weibo,pattern = "#.+#")
str_match_all(text_weibo, pattern = "[a-zA-Z]+")
strtrim(c("abcde", "abcde", "abcde"),width =  c(1, 5, 10))
str_pad(string = c("abcde", "abcde", "abcde"),width =  c(1, 5, 10),side = "right")
string <- "Each character string in the input is first split into\n paragraphs (or lines containing whitespace only). The paragraphs are then formatted by breaking lines at word boundaries."
strwrap(x = string, width = 30
strwrap(x = string, width = 30)
cat(str_wrap(string = string, width = 30))
help(sapply)
x <- list(1,2,3,4,5,6,7,8,9)
head(x)
y <- sapply(x,x-1)
y <- sapply(x,mean)
y
y <- sapply(x,x <- x-1)
y <- sapply(x,[x-1])
y <- sapply(x,x[-1])
y <- sapply(x,x[]-1)
y <- sapply(x,FUN=function(x) x-1)
y
install.packages("jiebaR")
library("jiebaR")
keys = worker("keywords", topn = 1)
keys <= "我爱北京天安门"
keys <= "一个文件路径.txt"
install.packages("tm")
require(plyr)
setwd("~/soe/R/Data Chap 3")
Aid90s00sJoin <- join(x = Aid_90s, y = Aid_00s, by = c("Country.Name", "Program.Name"))
ID<-c(1,1,2,2)
Time<-c(1,2,1,2)
X1<-c(5,3,6,2)
X2<-c(6,5,1,4)
mydata<-data.frame(ID,Time,X1,X2)
mydata
install.packages("reshape")
library(reshape)
md <- melt(mydata, id=(c("ID", "Time")))
md
cast(md, ID+variable~Time)
country<-c("China","USA","Japan")
GDP2000<-c(5000,6000,7000)
GDP2005<-c(5500,6500,7500)
GDP2010<-c(5010,6010,7001)
developed<-as.factor(c(0,1,1))
Data<-data.frame(country,developed,GDP2000,GDP2005,GDP2010)
Data
long<-reshape(Data,idvar="country",
varying=list(names(Data)[3:5]),
v.names="GDP",timevar="year",
times=c(2000,2005,2010),
direction="long")
#用country来区分，把data里面的3：5的数据附加成country.2000等
#新建GDP变量，和时间变量year并定义年份
long <- long[order(long$country),]
long
read.csv(clipboard)
read.csv("clipboard")
help("reshape")
wide <- reshape(Data1, v.names="rgdp1",
idvar="country", timevar="year",
direction="wide")
Data1 <- read.csv("clipboard")
Data1 <- read.csv("clipboard")
wide <- reshape(Data1, v.names="rgdp1",
idvar="country", timevar="year",
direction="wide")
wide <- reshape(Data1, v.names="rgdpl",
idvar="country", timevar="year",
direction="wide")
wide
wide <- reshape(Data1, v.names="rgdpl",
idvar="country", timevar="year",
direction="wide")
wide
long<-reshape(wide,idvar="country",
varying=list(names(wide)[3:6]),
v.names="rgdpl",timevar="year",
times=c(2007,2008,2009,2010),
direction="long")
long
rownames(long) <- NULL
long
long <- long[order(long$country),]
long
x <- c("a", "b", "c", "d")
for(i in 1:4) {
print(x[i])
}
for(i in seq_along(x)) {
print(x[i])
}
szSymbols <- c("MSFT","GOOG","AAPL","INTL","ORCL","SYMC")
for(SymbolName in szSymbols) {
cat(SymbolName,"\n",sep="")
}
x <- matrix(1:6, 2, 3)
x
for(i in seq_len(nrow(x))) {
for(j in seq_len(ncol(x))) {
print(x[i, j])
}
}
count <- 0
while(count < 10) {
print(count)
count <- count + 1
}
while(z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5) #取伯努利分布p=0.5
if(coin == 1) {
z <- z + 1
}
else {
z <- z - 1
}
}
z <- 5
while(z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5) #取伯努利分布p=0.5
if(coin == 1) {
z <- z + 1
}
else {
z <- z - 1
}
}
z <- 5
while(z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5) #取伯努利分布p=0.5
if(coin == 1) {
z <- z + 1
}
else {
z <- z - 1
}
}
z <- 5
while(z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5) #取伯努利分布p=0.5
if(coin == 1) {
z <- z + 1
}
else {
z <- z - 1
}
}
z <- 5
while(z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5) #取伯努利分布p=0.5
if(coin == 1) {
z <- z + 1
}
else {
z <- z - 1
}
}
z <- 5
while(z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5) #取伯努利分布p=0.5
if(coin == 1) {
z <- z + 1
}
else {
z <- z - 1
}
}
z <- 5
while(z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5) #取伯努利分布p=0.5
if(coin == 1) {
z <- z + 1
}
else {
z <- z - 1
}
}
z <- 5
while(z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5) #取伯努利分布p=0.5
if(coin == 1) {
z <- z + 1
}
else {
z <- z - 1
}
}
z <- 5
while(z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5) #取伯努利分布p=0.5
if(coin == 1) {
z <- z + 1
}
else {
z <- z - 1
}
}
z <- 5
while(z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5) #取伯努利分布p=0.5
if(coin == 1) {
z <- z + 1
}
else {
z <- z - 1
}
}
z <- 5
while(z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5) #取伯努利分布p=0.5
if(coin == 1) {
z <- z + 1
}
else {
z <- z - 1
}
}
z <- 5
while(z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5) #取伯努利分布p=0.5
if(coin == 1) {
z <- z + 1
}
else {
z <- z - 1
}
}
z <- 5
while(z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5) #取伯努利分布p=0.5
if(coin == 1) {
z <- z + 1
}
else {
z <- z - 1
}
}
z <- 5
while(z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5) #取伯努利分布p=0.5
if(coin == 1) {
z <- z + 1
}
else {
z <- z - 1
}
}
z <- 5
while(z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5) #取伯努利分布p=0.5
if(coin == 1) {
z <- z + 1
}
else {
z <- z - 1
}
}
z <- 5
while(z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5) #取伯努利分布p=0.5
if(coin == 1) {
z <- z + 1
}
else {
z <- z - 1
}
}
z <- 5
while(z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5) #取伯努利分布p=0.5
if(coin == 1) {
z <- z + 1
}
else {
z <- z - 1
}
}
z <- 5
while(z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5) #取伯努利分布p=0.5
if(coin == 1) {
z <- z + 1
}
else {
z <- z - 1
}
}
z <- 5
while(z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5) #取伯努利分布p=0.5
if(coin == 1) {
z <- z + 1
}
else {
z <- z - 1
}
}
z <- 5
while(z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5) #取伯努利分布p=0.5
if(coin == 1) {
z <- z + 1
}
else {
z <- z - 1
}
}
z <- 5
while(z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5) #取伯努利分布p=0.5
if(coin == 1) {
z <- z + 1
}
else {
z <- z - 1
}
}
z <- 5
while(z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5) #取伯努利分布p=0.5
if(coin == 1) {
z <- z + 1
}
else {
z <- z - 1
}
}
z <- 5
while(z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5) #取伯努利分布p=0.5
if(coin == 1) {
z <- z + 1
}
else {
z <- z - 1
}
}
z <- 5
while(z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5) #取伯努利分布p=0.5
if(coin == 1) {
z <- z + 1
}
else {
z <- z - 1
}
}
z <- 5
while(z >= 3 && z <= 15) {
print(z)
coin <- rbinom(1, 1, 0.5) #取伯努利分布p=0.5
if(coin == 1) {
z <- z + 1
}
else {
z <- z - 1
}
}
z <- 5
while(z >= 3 && z <= 15) {
print(z)
coin <- rbinom(1, 1, 0.5) #取伯努利分布p=0.5
if(coin == 1) {
z <- z + 1
}
else {
z <- z - 1
}
}
z <- 5
while(z >= 3 && z <= 15) {
print(z)
coin <- rbinom(1, 1, 0.5) #取伯努利分布p=0.5
if(coin == 1) {
z <- z + 1
}
else {
z <- z - 1
}
}
z <- 5
while(z >= 3 && z <= 15) {
print(z)
coin <- rbinom(1, 1, 0.5) #取伯努利分布p=0.5
if(coin == 1) {
z <- z + 1
}
else {
z <- z - 1
}
}
z <- 5
while(z >= 3 && z <= 20) {
print(z)
coin <- rbinom(1, 1, 0.5) #取伯努利分布p=0.5
if(coin == 1) {
z <- z + 1
}
else {
z <- z - 1
}
}
z <- 5
while(z >= 3 && z <= 20) {
print(z)
coin <- rbinom(1, 1, 0.5) #取伯努利分布p=0.5
if(coin == 1) {
z <- z + 1
}
else {
z <- z - 1
}
}
z <- 5
while(z >= 3 && z <= 20) {
print(z)
coin <- rbinom(1, 1, 0.5) #取伯努利分布p=0.5
if(coin == 1) {
z <- z + 1
}
else {
z <- z - 1
}
}
z <- 5
while(z >= 3 && z <= 20) {
print(z)
coin <- rbinom(1, 1, 0.5) #取伯努利分布p=0.5
if(coin == 1) {
z <- z + 1
}
else {
z <- z - 1
}
}
z <- 5
while(z >= 3 && z <= 20) {
print(z)
coin <- rbinom(1, 1, 0.5) #取伯努利分布p=0.5
if(coin == 1) {
z <- z + 1
}
else {
z <- z - 1
}
}
