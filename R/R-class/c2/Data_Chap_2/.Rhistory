install.packages("parallel")
library(R2SWF)
if (capabilities("cairo")) {
olddir = setwd(tempdir())
svg("Rplot%03d.svg", onefile = FALSE)
set.seed(123)
x = rnorm(5)
y = rnorm(5)
for (i in 1:100) {
plot(x <- x + 0.1 * rnorm(5), y <- y + 0.1 * rnorm(5), xlim = c(-3,
3), ylim = c(-3, 3), col = "steelblue", pch = 16, cex = 2, xlab = "x",
ylab = "y")
}
dev.off()
output = svg2swf(sprintf("Rplot%03d.svg", 1:100), interval = 0.1)
swf2html(output)
setwd(olddir)
}
library(ggmap)
library(mapproj)
map <- get_map(location = 'China', zoom = 4)
ggmap(map)
map <- get_map(location = 'Beijing', zoom = 10, maptype = 'roadmap')
ggmap(map)
install.packages("knitr")
install.packages("R2SWF")
install.packages("ggmap")
install.packages("mapproj")
install.packages("animation")
install.packages("maps")
dir(getwd())
memory.size()
memory.limit()
ls()
ls(getwd)
help(ls)
x<-1
ls
ls()
objects()
object.size()
object.size(x)
calling objects("package:base")
objects("package:base")
search()
help(rm)
history(#)
help(history)
6
help("history")
history(4)
library()
search('')
search()
library(knitr)
search()
help("help.start")
help.start
help.start()
help(rep)
rep(1:4,2)
pmin(c(1,2,3),c(2,3))
pmin(c(1,2,3),c(2,3,4))
nlm(function(x) return(x^2-sin(x)),8)
help(nlm)
rep
help(rep)
help("cbind")
help(runif)
runif(20)
summary(x)
x <- runif(20)
summary(x)
hist(x)
install.packages("ggpolt")
install.packages("ggplot")
library(ggplot2)
install.packages("ggplot2")
library(maps)
libraray(vcd)
library(vcd)
library(knitr)
library(MASS)
# reads in PUMS file pf, extracting the Person records, returning a data
# frame; each row of the output will consist of the Household serial
# number and the fields specified in the list flds; the columns of
# the data frame will have the names of the indices in flds
extractpums <- function(pf,flds) {
dtf <- data.frame()  # data frame to be built
con <- file(pf,"r")  # connection
# process the input file
repeat {
hrec <- readLines(con,1)  # read Household record
if (length(hrec) == 0) break  # end of file, leave loop
# get household serial number
serno <- intextract(hrec,c(2,8))
# how many Person records?
npr <- intextract(hrec,c(106,107))
if (npr > 0)
for (i in 1:npr) {
prec <- readLines(con,1)  # get Person record
# make this person's row for the data frame
person <- makerow(serno,prec,flds)
# add it to the data frame
dtf <- rbind(dtf,person)
}
}
return(dtf)
}
# set up this person's row for the data frame
makerow <- function(srn,pr,fl) {
l <- list()
l[["serno"]] <- srn
for (nm in names(fl)) {
l[[nm]] <- intextract(pr,fl[[nm]])
}
return(l)
}
# extracts an integer field in the string s, in character positions
# rng[1] through rng[2]
intextract <- function(s,rng) {
fld <- substr(s,rng[1],rng[2])
return(as.integer(fld))
}
setwd("~/soe/R/Data_Chap_2")
prumfd<-extractpums("pumsa.txt")
prumfd<-extractpums("pumsa.txt",Gender=(23,23))
prumfd<-extractpums("pumsa.txt",list=(Gender=(23,23)))
prumfd<-extractpums("pumsa",list=(Gender=(23,23)))
prumfd<-extractpums("pumsa",list(Gender=(23,23)))
prumfd<-extractpums("pumsa",list(Gender=c(23,23)))
setwd("~/soe/R/Data_Chap_2")
prumfd<-extractpums("pumsa",list(Gender=c(23,23)))
prumfd<-extractpums("pumsa.txt",list(Gender=c(23,23)))
